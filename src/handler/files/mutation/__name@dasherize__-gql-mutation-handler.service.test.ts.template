import { createServiceFactory } from '@ngneat/spectator/jest';
import {
  <%= classify(name) %>GraphQlMutationHandlerService,
  <%= symbolify(name) %>_GQL_MUTATION_REQUEST,
  <%= classify(name) %>MutationRequest,
  <%= classify(name) %>MutationResponse
} from './<%= dasherize(name) %>-gql-mutation-handler.service';

describe('<%= classify(name) %>GraphQlMutationHandlerService', () => {
  const createService = createServiceFactory({
    service: <%= classify(name) %>GraphQlMutationHandlerService
  });

  const buildRequest = (): <%= classify(name) %>MutationRequest => ({
    requestType: <%= symbolify(name) %>_GQL_MUTATION_REQUEST
  });

  const mockResponse: <%= classify(name) %>MutationResponse = {
  };

  test('should match request correctly', () => {
    const spectator = createService();
    expect(spectator.service.matchesRequest(buildRequest())).toBe(true);
    expect(spectator.service.matchesRequest({ requestType: 'other' })).toBe(false);
  });

  test('should produce expected graphql', () => {
    const spectator = createService();
    const requestSelection = spectator.service.convertRequest();
    expect(requestSelection).toEqual({});
  });

  test('should convert response correctly', () => {
    const spectator = createService();
    expect(spectator.service.convertResponse(mockResponse)).toMatchObject({});
  });
});
